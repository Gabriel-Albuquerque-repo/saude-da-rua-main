service: saude-da-rua-main
frameworkVersion: "2 || 3"

provider:
    name: aws
    runtime: nodejs14.x
    region: sa-east-1
    stage: dev
    httpApi:
        cors: true
        authorizers:
            lambdaAuthorizerJWT:
                type: request
                functionName: lambdaAuthProxy
    lambdaHashingVersion: 20201221
    environment:
        region: ${self:provider.region}
        ADMINS_TABLE_NAME: ${self:custom.adminsTableName}

custom:
    adminsTableName: Admins-Table

functions:
    lambdaAuthProxy:
        name: lambda-auth
        handler: src/lambdas/AuthenticateAdminProxy.handler
    loginAdmin:
        name: login-admin
        handler: src/lambdas/LoginAdmin.handler
        events:
            - httpApi:
                  path: /login
                  method: POST
        iamRoleStatements:
            - Effect: "Allow"
              Action:
                  - "dynamodb:Query"
              Resource:
                  - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.adminsTableName}"
                  - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.adminsTableName}/index/email"
    createAdmin:
        name: create-admin
        handler: src/lambdas/CreateAdmin.handler
        events:
            - httpApi:
                  path: /create/admin
                  method: POST
                  authorizer:
                      name: lambdaAuthorizerJWT
        iamRoleStatements:
            - Effect: "Allow"
              Action:
                  - "dynamodb:Query"
                  - "dynamodb:PutItem"
              Resource:
                  - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.adminsTableName}"
                  - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.adminsTableName}/index/email"

plugins:
    - serverless-plugin-typescript
    - serverless-dotenv-plugin
    - serverless-iam-roles-per-function
    - serverless-pseudo-parameters

resources:
    Resources:
        AdminsTable:
            Type: AWS::DynamoDB::Table
            DeletionPolicy: Retain
            Properties:
                TableName: ${self:custom.adminsTableName}
                AttributeDefinitions:
                    - AttributeName: email
                      AttributeType: S
                KeySchema:
                    - AttributeName: email
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
